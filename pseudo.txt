In our UI, the player should be able to play the game by clicking 
on buttons rather than typing their answer in a prompt.

For now, remove the logic that plays exactly five rounds.

Create three buttons, one for each selection. 
Add an event listener to the buttons 
that call your playRound function with the correct playerSelection every time a button is clicked. 
(you can keep the console.logs for this step)
Add a div for displaying results and change all of your console.logs into DOM methods.

Display the running score, 
and announce a winner of the game once one player reaches 5 points.

You will likely have to refactor (rework/rewrite) your original code to make it work for this. 
That’s OK! Reworking old code is an important part of a programmer’s life.
Once you’re all done with your UI and made sure everything’s satisfactory, 
commit your changes to the rps-ui branch.

html pseudo 

html
    head
        title
    head

    body
        div class = wholePage
            header
            game message
            score
            div class = buttons
                button
                button
                button
            div
    body
html

javascript pseudo

    define query selectors for paper, scissors & rock (or one querySelectAll the buttons div?)
    listen for 'click' on any of the three - could be done using the nodelist?
    compare the result of this with the existing computer choice value
    use the same logic as before to define a winner
    provide ability to itterate over this 5 times
    announce final winner - logic should be the same as before